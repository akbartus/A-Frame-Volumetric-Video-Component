////////////////////////////
// Minified vologram code //
////////////////////////////
var Module = (() => { var A = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0; return function (B) { var Q, E, C, g, I, w, F, D, c, s, t, U, o, M, G, $, n, Y, e, l, R, i, a, r, N, B = void 0 !== (B = B || {}) ? B : {}; B.ready = new Promise(function (A, B) { E = A, C = B }), B.initVologramFunctions = A => { let Q = A || B; Q.has_normals = B.cwrap("has_normals", "boolean"), Q.has_texture = B.cwrap("has_texture", "boolean"), Q.texture_width = B.cwrap("texture_width", "number"), Q.texture_height = B.cwrap("texture_height", "number"), Q.create_file_info = B.cwrap("create_file_info", "boolean", ["string", "string"]), Q.free_file_info = B.cwrap("free_file_info", "boolean"), Q.frame_count = B.cwrap("frame_count", "number"), Q.loaded_frame_number = B.cwrap("loaded_frame_number", "number"), Q.read_frame = B.cwrap("read_frame", "boolean", ["number",]), Q.max_blob_sz = B.cwrap("max_blob_sz", "number"), Q.is_keyframe = B.cwrap("is_keyframe", "boolean", ["number",]), Q.find_previous_keyframe = B.cwrap("find_previous_keyframe", "number", ["number"]), Q.frame_vertices = B.cwrap("frame_vertices", "array"), Q.frame_vertices_sz = B.cwrap("frame_vertices_sz", "number"), Q.frame_uvs_sz = B.cwrap("frame_uvs_sz", "number"), Q.frame_normals_sz = B.cwrap("frame_normals_sz", "number"), Q.frame_texture_data_ptr = B.cwrap("frame_texture_data_ptr", "number"), Q.frame_texture_sz = B.cwrap("frame_texture_sz", "number"), Q.frame_indices = B.cwrap("frame_i", "array"), Q.frame_i_sz = B.cwrap("frame_i_sz", "number"), Q.frame_data_ptr = B.cwrap("frame_data_ptr", "array"), Q.frame_vp_offset = B.cwrap("frame_vp_offset", "number"), Q.frame_vp_copied = B.cwrap("frame_vp_copied", "array"), Q.frame_uvs_copied = B.cwrap("frame_uvs_copied", "array"), Q.frame_normals_copied = B.cwrap("frame_normals_copied", "array"), Q.frame_indices_copied = B.cwrap("frame_indices_copied", "array") }; var J = Object.assign({}, B), L = [], d = "./this.program", f = (A, B) => { throw B }, k = ""; "undefined" != typeof document && document.currentScript && (k = document.currentScript.src), A && (k = A), k = 0 !== k.indexOf("blob:") ? k.substr(0, k.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", g = A => { try { var B = new XMLHttpRequest; return B.open("GET", A, !1), B.send(null), B.responseText } catch (Q) { var E = A8(A); if (E) return function A(B) { for (var Q = [], E = 0; E < B.length; E++){ var C = B[E]; C > 255 && (A3 && X(!1, "Character code " + C + " (" + String.fromCharCode(C) + ")  at offset " + E + " not in 0x00-0xFF."), C &= 255), Q.push(String.fromCharCode(C)) } return Q.join("") }(E); throw Q } }, I = (A, B, Q) => { var E = new XMLHttpRequest; E.open("GET", A, !0), E.responseType = "arraybuffer", E.onload = () => { if (200 == E.status || 0 == E.status && E.response) { B(E.response); return } var C = A8(A); if (C) { B(C.buffer); return } Q() }, E.onerror = Q, E.send(null) }, F = A => document.title = A; var Z = B.print || console.log.bind(console), h = B.printErr || console.warn.bind(console); function b(A) { switch (A) { case "i1": case "i8": case "u8": return 1; case "i16": case "u16": return 2; case "i32": case "u32": case "float": return 4; case "i64": case "u64": case "double": return 8; default: if ("*" === A[A.length - 1]) return 4; if ("i" === A[0]) { let B = Number(A.substr(1)); return X(B % 8 == 0, "getNativeTypeSize invalid bits " + B + ", type " + A), B / 8 } return 0 } } Object.assign(B, J), J = null, B.arguments && (L = B.arguments), B.thisProgram && (d = B.thisProgram), B.quit && (f = B.quit), B.wasmBinary && (D = B.wasmBinary); var y = B.noExitRuntime || !0; "object" != typeof WebAssembly && Ag("no native wasm support detected"); var H = !1; function X(A, B) { A || Ag(B) } var m = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0; function W(A, B, Q) { for (var E = B + Q, C = B; A[C] && !(C >= E);)++C; if (C - B > 16 && A.buffer && m) return m.decode(A.subarray(B, C)); for (var g = ""; B < C;){ var I = A[B++]; if (!(128 & I)) { g += String.fromCharCode(I); continue } var w = 63 & A[B++]; if ((224 & I) == 192) { g += String.fromCharCode((31 & I) << 6 | w); continue } var F = 63 & A[B++]; if ((I = (240 & I) == 224 ? (15 & I) << 12 | w << 6 | F : (7 & I) << 18 | w << 12 | F << 6 | 63 & A[B++]) < 65536) g += String.fromCharCode(I); else { var D = I - 65536; g += String.fromCharCode(55296 | D >> 10, 56320 | 1023 & D) } } return g } function S(A, B) { return A ? W(o, A, B) : "" } function V(A, B, Q, E) { if (!(E > 0)) return 0; for (var C = Q, g = Q + E - 1, I = 0; I < A.length; ++I){ var w = A.charCodeAt(I); if (w >= 55296 && w <= 57343 && (w = 65536 + ((1023 & w) << 10) | 1023 & A.charCodeAt(++I)), w <= 127) { if (Q >= g) break; B[Q++] = w } else if (w <= 2047) { if (Q + 1 >= g) break; B[Q++] = 192 | w >> 6, B[Q++] = 128 | 63 & w } else if (w <= 65535) { if (Q + 2 >= g) break; B[Q++] = 224 | w >> 12, B[Q++] = 128 | w >> 6 & 63, B[Q++] = 128 | 63 & w } else { if (Q + 3 >= g) break; B[Q++] = 240 | w >> 18, B[Q++] = 128 | w >> 12 & 63, B[Q++] = 128 | w >> 6 & 63, B[Q++] = 128 | 63 & w } } return B[Q] = 0, Q - C } function v(A, B, Q) { return V(A, o, B, Q) } function u(A) { for (var B = 0, Q = 0; Q < A.length; ++Q){ var E = A.charCodeAt(Q); E <= 127 ? B++ : E <= 2047 ? B += 2 : E >= 55296 && E <= 57343 ? (B += 4, ++Q) : B += 3 } return B } function O(A) { t = A, B.HEAP8 = U = new Int8Array(A), B.HEAP16 = M = new Int16Array(A), B.HEAP32 = $ = new Int32Array(A), B.HEAPU8 = o = new Uint8Array(A), B.HEAPU16 = G = new Uint16Array(A), B.HEAPU32 = n = new Uint32Array(A), B.HEAPF32 = Y = new Float32Array(A), B.HEAPF64 = e = new Float64Array(A) } B.INITIAL_MEMORY; var p = [], j = [], z = [], x = !1; function _() { return y } function K(A) { p.unshift(A) } function T(A) { } function P(A) { z.unshift(A) } var q = 0, AA = null, AB = null; function AQ(A) { return A } function AE(A) { q++, B.monitorRunDependencies && B.monitorRunDependencies(q) } function AC(A) { if (q--, B.monitorRunDependencies && B.monitorRunDependencies(q), 0 == q && (null !== AA && (clearInterval(AA), AA = null), AB)) { var Q = AB; AB = null, Q() } } function Ag(A) { B.onAbort && B.onAbort(A), h(A = "Aborted(" + A + ")"), H = !0, s = 1, A += ". Build with -sASSERTIONS for more info."; var Q = new WebAssembly.RuntimeError(A); throw C(Q), Q } var AI = "data:application/octet-stream;base64,"; function Aw(A) { return A.startsWith(AI) } function AF(A) { return A.startsWith("file://") } function AD(A) { try { if (A == R && D) return new Uint8Array(D); var B = A8(A); if (B) return B; if (w) return w(A); throw "both async and sync fetching of the wasm failed" } catch (Q) { Ag(Q) } } function Ac(A) { this.name = "ExitStatus", this.message = "Program terminated with exit(" + A + ")", this.status = A } function As(A) { for (; A.length > 0;)A.shift()(B) } function At(A) { var B = Bh(), Q = A(); return Bb(B), Q } function AU(A) { return A } function Ao(A, B = "i8") { switch (B.endsWith("*") && (B = "*"), B) { case "i1": case "i8": return U[A >> 0]; case "i16": return M[A >> 1]; case "i32": case "i64": return $[A >> 2]; case "float": return Y[A >> 2]; case "double": return e[A >> 3]; case "*": return n[A >> 2]; default: Ag("invalid type for getValue: " + B) }return null } function AM(A, B, Q = "i8") { switch (Q.endsWith("*") && (Q = "*"), Q) { case "i1": case "i8": U[A >> 0] = B; break; case "i16": M[A >> 1] = B; break; case "i32": $[A >> 2] = B; break; case "i64": a = [B >>> 0, +Math.abs(i = B) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[A >> 2] = a[0], $[A + 4 >> 2] = a[1]; break; case "float": Y[A >> 2] = B; break; case "double": e[A >> 3] = B; break; case "*": n[A >> 2] = B; break; default: Ag("invalid type for setValue: " + Q) } } function AG() { var A, Q = function A() { var B = Error(); if (!B.stack) { try { throw Error() } catch (Q) { B = Q } if (!B.stack) return "(no stack trace available)" } return B.stack.toString() }(); return B.extraStackTrace && (Q += "\n" + B.extraStackTrace()), (A = Q).replace(/\b_Z[\w\d_]+/g, function (A) { var B, Q = B = A; return A === Q ? A : Q + " [" + A + "]" }) } !Aw(R = "data:application/octet-stream;base64,") && (R = (Q = R, B.locateFile ? B.locateFile(Q, k) : k + Q)); var A$ = { isAbs: A => "/" === A.charAt(0), splitPath: A => /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1), normalizeArray(A, B) { for (var Q = 0, E = A.length - 1; E >= 0; E--){ var C = A[E]; "." === C ? A.splice(E, 1) : ".." === C ? (A.splice(E, 1), Q++) : Q && (A.splice(E, 1), Q--) } if (B) for (; Q; Q--)A.unshift(".."); return A }, normalize(A) { var B = A$.isAbs(A), Q = "/" === A.substr(-1); return (A = A$.normalizeArray(A.split("/").filter(A => !!A), !B).join("/")) || B || (A = "."), A && Q && (A += "/"), (B ? "/" : "") + A }, dirname(A) { var B = A$.splitPath(A), Q = B[0], E = B[1]; return Q || E ? (E && (E = E.substr(0, E.length - 1)), Q + E) : "." }, basename(A) { if ("/" === A) return "/"; var B = (A = (A = A$.normalize(A)).replace(/\/$/, "")).lastIndexOf("/"); return -1 === B ? A : A.substr(B + 1) }, join: function () { var A = Array.prototype.slice.call(arguments, 0); return A$.normalize(A.join("/")) }, join2: (A, B) => A$.normalize(A + "/" + B) }, An = { resolve: function () { for (var A = "", B = !1, Q = arguments.length - 1; Q >= -1 && !B; Q--){ var E = Q >= 0 ? arguments[Q] : Ar.cwd(); if ("string" != typeof E) throw TypeError("Arguments to path.resolve must be strings"); if (!E) return ""; A = E + "/" + A, B = A$.isAbs(E) } return A = A$.normalizeArray(A.split("/").filter(A => !!A), !B).join("/"), (B ? "/" : "") + A || "." }, relative(A, B) { function Q(A) { for (var B = 0; B < A.length && "" === A[B]; B++); for (var Q = A.length - 1; Q >= 0 && "" === A[Q]; Q--); return B > Q ? [] : A.slice(B, Q - B + 1) } A = An.resolve(A).substr(1), B = An.resolve(B).substr(1); for (var E = Q(A.split("/")), C = Q(B.split("/")), g = Math.min(E.length, C.length), I = g, w = 0; w < g; w++)if (E[w] !== C[w]) { I = w; break } for (var F = [], w = I; w < E.length; w++)F.push(".."); return (F = F.concat(C.slice(I))).join("/") } }; function AY(A, B, Q) { var E = Q > 0 ? Q : u(A) + 1, C = Array(E), g = V(A, C, 0, C.length); return B && (C.length = g), C } var Ae = { ttys: [], init: function () { }, shutdown: function () { }, register: function (A, B) { Ae.ttys[A] = { input: [], output: [], ops: B }, Ar.registerDevice(A, Ae.stream_ops) }, stream_ops: { open: function (A) { var B = Ae.ttys[A.node.rdev]; if (!B) throw new Ar.ErrnoError(43); A.tty = B, A.seekable = !1 }, close: function (A) { A.tty.ops.fsync(A.tty) }, fsync: function (A) { A.tty.ops.fsync(A.tty) }, read: function (A, B, Q, E, C) { if (!A.tty || !A.tty.ops.get_char) throw new Ar.ErrnoError(60); for (var g, I = 0, w = 0; w < E; w++){ try { g = A.tty.ops.get_char(A.tty) } catch (F) { throw new Ar.ErrnoError(29) } if (void 0 === g && 0 === I) throw new Ar.ErrnoError(6); if (null == g) break; I++, B[Q + w] = g } return I && (A.node.timestamp = Date.now()), I }, write: function (A, B, Q, E, C) { if (!A.tty || !A.tty.ops.put_char) throw new Ar.ErrnoError(60); try { for (var g = 0; g < E; g++)A.tty.ops.put_char(A.tty, B[Q + g]) } catch (I) { throw new Ar.ErrnoError(29) } return E && (A.node.timestamp = Date.now()), g } }, default_tty_ops: { get_char: function (A) { if (!A.input.length) { var B = null; if ("undefined" != typeof window && "function" == typeof window.prompt ? null !== (B = window.prompt("Input: ")) && (B += "\n") : "function" == typeof readline && null !== (B = readline()) && (B += "\n"), !B) return null; A.input = AY(B, !0) } return A.input.shift() }, put_char: function (A, B) { null === B || 10 === B ? (Z(W(A.output, 0)), A.output = []) : 0 != B && A.output.push(B) }, fsync: function (A) { A.output && A.output.length > 0 && (Z(W(A.output, 0)), A.output = []) } }, default_tty1_ops: { put_char: function (A, B) { null === B || 10 === B ? (h(W(A.output, 0)), A.output = []) : 0 != B && A.output.push(B) }, fsync: function (A) { A.output && A.output.length > 0 && (h(W(A.output, 0)), A.output = []) } } }; function Al(A, B) { o.fill(0, A, A + B) } function AR(A, B) { return Math.ceil(A / B) * B } function Ai(A) { Ag() } var Aa = { ops_table: null, mount: function (A) { return Aa.createNode(null, "/", 16895, 0) }, createNode: function (A, B, Q, E) { if (Ar.isBlkdev(Q) || Ar.isFIFO(Q)) throw new Ar.ErrnoError(63); Aa.ops_table || (Aa.ops_table = { dir: { node: { getattr: Aa.node_ops.getattr, setattr: Aa.node_ops.setattr, lookup: Aa.node_ops.lookup, mknod: Aa.node_ops.mknod, rename: Aa.node_ops.rename, unlink: Aa.node_ops.unlink, rmdir: Aa.node_ops.rmdir, readdir: Aa.node_ops.readdir, symlink: Aa.node_ops.symlink }, stream: { llseek: Aa.stream_ops.llseek } }, file: { node: { getattr: Aa.node_ops.getattr, setattr: Aa.node_ops.setattr }, stream: { llseek: Aa.stream_ops.llseek, read: Aa.stream_ops.read, write: Aa.stream_ops.write, allocate: Aa.stream_ops.allocate, mmap: Aa.stream_ops.mmap, msync: Aa.stream_ops.msync } }, link: { node: { getattr: Aa.node_ops.getattr, setattr: Aa.node_ops.setattr, readlink: Aa.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: Aa.node_ops.getattr, setattr: Aa.node_ops.setattr }, stream: Ar.chrdev_stream_ops } }); var C = Ar.createNode(A, B, Q, E); return Ar.isDir(C.mode) ? (C.node_ops = Aa.ops_table.dir.node, C.stream_ops = Aa.ops_table.dir.stream, C.contents = {}) : Ar.isFile(C.mode) ? (C.node_ops = Aa.ops_table.file.node, C.stream_ops = Aa.ops_table.file.stream, C.usedBytes = 0, C.contents = null) : Ar.isLink(C.mode) ? (C.node_ops = Aa.ops_table.link.node, C.stream_ops = Aa.ops_table.link.stream) : Ar.isChrdev(C.mode) && (C.node_ops = Aa.ops_table.chrdev.node, C.stream_ops = Aa.ops_table.chrdev.stream), C.timestamp = Date.now(), A && (A.contents[B] = C, A.timestamp = C.timestamp), C }, getFileDataAsTypedArray: function (A) { return A.contents ? A.contents.subarray ? A.contents.subarray(0, A.usedBytes) : new Uint8Array(A.contents) : new Uint8Array(0) }, expandFileStorage: function (A, B) { var Q = A.contents ? A.contents.length : 0; if (!(Q >= B)) { B = Math.max(B, Q * (Q < 1048576 ? 2 : 1.125) >>> 0), 0 != Q && (B = Math.max(B, 256)); var E = A.contents; A.contents = new Uint8Array(B), A.usedBytes > 0 && A.contents.set(E.subarray(0, A.usedBytes), 0) } }, resizeFileStorage: function (A, B) { if (A.usedBytes != B) { if (0 == B) A.contents = null, A.usedBytes = 0; else { var Q = A.contents; A.contents = new Uint8Array(B), Q && A.contents.set(Q.subarray(0, Math.min(B, A.usedBytes))), A.usedBytes = B } } }, node_ops: { getattr: function (A) { var B = {}; return B.dev = Ar.isChrdev(A.mode) ? A.id : 1, B.ino = A.id, B.mode = A.mode, B.nlink = 1, B.uid = 0, B.gid = 0, B.rdev = A.rdev, Ar.isDir(A.mode) ? B.size = 4096 : Ar.isFile(A.mode) ? B.size = A.usedBytes : Ar.isLink(A.mode) ? B.size = A.link.length : B.size = 0, B.atime = new Date(A.timestamp), B.mtime = new Date(A.timestamp), B.ctime = new Date(A.timestamp), B.blksize = 4096, B.blocks = Math.ceil(B.size / B.blksize), B }, setattr: function (A, B) { void 0 !== B.mode && (A.mode = B.mode), void 0 !== B.timestamp && (A.timestamp = B.timestamp), void 0 !== B.size && Aa.resizeFileStorage(A, B.size) }, lookup: function (A, B) { throw Ar.genericErrors[44] }, mknod: function (A, B, Q, E) { return Aa.createNode(A, B, Q, E) }, rename: function (A, B, Q) { if (Ar.isDir(A.mode)) { var E; try { E = Ar.lookupNode(B, Q) } catch (C) { } if (E) for (var g in E.contents) throw new Ar.ErrnoError(55) } delete A.parent.contents[A.name], A.parent.timestamp = Date.now(), A.name = Q, B.contents[Q] = A, B.timestamp = A.parent.timestamp, A.parent = B }, unlink: function (A, B) { delete A.contents[B], A.timestamp = Date.now() }, rmdir: function (A, B) { var Q = Ar.lookupNode(A, B); for (var E in Q.contents) throw new Ar.ErrnoError(55); delete A.contents[B], A.timestamp = Date.now() }, readdir: function (A) { var B = [".", ".."]; for (var Q in A.contents) A.contents.hasOwnProperty(Q) && B.push(Q); return B }, symlink: function (A, B, Q) { var E = Aa.createNode(A, B, 41471, 0); return E.link = Q, E }, readlink: function (A) { if (!Ar.isLink(A.mode)) throw new Ar.ErrnoError(28); return A.link } }, stream_ops: { read: function (A, B, Q, E, C) { var g = A.node.contents; if (C >= A.node.usedBytes) return 0; var I = Math.min(A.node.usedBytes - C, E); if (I > 8 && g.subarray) B.set(g.subarray(C, C + I), Q); else for (var w = 0; w < I; w++)B[Q + w] = g[C + w]; return I }, write: function (A, B, Q, E, C, g) { if (B.buffer === U.buffer && (g = !1), !E) return 0; var I = A.node; if (I.timestamp = Date.now(), B.subarray && (!I.contents || I.contents.subarray)) { if (g) return I.contents = B.subarray(Q, Q + E), I.usedBytes = E, E; if (0 === I.usedBytes && 0 === C) return I.contents = B.slice(Q, Q + E), I.usedBytes = E, E; if (C + E <= I.usedBytes) return I.contents.set(B.subarray(Q, Q + E), C), E } if (Aa.expandFileStorage(I, C + E), I.contents.subarray && B.subarray) I.contents.set(B.subarray(Q, Q + E), C); else for (var w = 0; w < E; w++)I.contents[C + w] = B[Q + w]; return I.usedBytes = Math.max(I.usedBytes, C + E), E }, llseek: function (A, B, Q) { var E = B; if (1 === Q ? E += A.position : 2 === Q && Ar.isFile(A.node.mode) && (E += A.node.usedBytes), E < 0) throw new Ar.ErrnoError(28); return E }, allocate: function (A, B, Q) { Aa.expandFileStorage(A.node, B + Q), A.node.usedBytes = Math.max(A.node.usedBytes, B + Q) }, mmap: function (A, B, Q, E, C) { if (!Ar.isFile(A.node.mode)) throw new Ar.ErrnoError(43); var g, I, w, F = A.node.contents; if (2 & C || F.buffer !== t) throw (Q > 0 || Q + B < F.length) && (F = F.subarray ? F.subarray(Q, Q + B) : Array.prototype.slice.call(F, Q, Q + B)), w = !0, I = void Ag(), new Ar.ErrnoError(48); return w = !1, I = F.byteOffset, { ptr: I, allocated: w } }, msync: function (A, B, Q, E, C) { if (!Ar.isFile(A.node.mode)) throw new Ar.ErrnoError(43); return 2 & C || Aa.stream_ops.write(A, B, 0, E, Q, !1), 0 } } }, Ar = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: !1, ignorePermissions: !0, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath(A, B = {}) { if (!(A = An.resolve(Ar.cwd(), A))) return { path: "", node: null }; if ((B = Object.assign({ follow_mount: !0, recurse_count: 0 }, B)).recurse_count > 8) throw new Ar.ErrnoError(32); for (var Q = A$.normalizeArray(A.split("/").filter(A => !!A), !1), E = Ar.root, C = "/", g = 0; g < Q.length; g++){ var I = g === Q.length - 1; if (I && B.parent) break; if (E = Ar.lookupNode(E, Q[g]), C = A$.join2(C, Q[g]), Ar.isMountpoint(E) && (!I || I && B.follow_mount) && (E = E.mounted.root), !I || B.follow) for (var w = 0; Ar.isLink(E.mode);){ var F = Ar.readlink(C); if (C = An.resolve(A$.dirname(C), F), E = Ar.lookupPath(C, { recurse_count: B.recurse_count + 1 }).node, w++ > 40) throw new Ar.ErrnoError(32) } } return { path: C, node: E } }, getPath(A) { for (var B; ;){ if (Ar.isRoot(A)) { var Q = A.mount.mountpoint; if (!B) return Q; return "/" !== Q[Q.length - 1] ? Q + "/" + B : Q + B } B = B ? A.name + "/" + B : A.name, A = A.parent } }, hashName(A, B) { for (var Q = 0, E = 0; E < B.length; E++)Q = (Q << 5) - Q + B.charCodeAt(E) | 0; return (A + Q >>> 0) % Ar.nameTable.length }, hashAddNode(A) { var B = Ar.hashName(A.parent.id, A.name); A.name_next = Ar.nameTable[B], Ar.nameTable[B] = A }, hashRemoveNode(A) { var B = Ar.hashName(A.parent.id, A.name); if (Ar.nameTable[B] === A) Ar.nameTable[B] = A.name_next; else for (var Q = Ar.nameTable[B]; Q;){ if (Q.name_next === A) { Q.name_next = A.name_next; break } Q = Q.name_next } }, lookupNode(A, B) { var Q = Ar.mayLookup(A); if (Q) throw new Ar.ErrnoError(Q, A); for (var E = Ar.hashName(A.id, B), C = Ar.nameTable[E]; C; C = C.name_next){ var g = C.name; if (C.parent.id === A.id && g === B) return C } return Ar.lookup(A, B) }, createNode(A, B, Q, E) { var C = new Ar.FSNode(A, B, Q, E); return Ar.hashAddNode(C), C }, destroyNode(A) { Ar.hashRemoveNode(A) }, isRoot: A => A === A.parent, isMountpoint: A => !!A.mounted, isFile: A => (61440 & A) == 32768, isDir: A => (61440 & A) == 16384, isLink: A => (61440 & A) == 40960, isChrdev: A => (61440 & A) == 8192, isBlkdev: A => (61440 & A) == 24576, isFIFO: A => (61440 & A) == 4096, isSocket: A => (49152 & A) == 49152, flagModes: { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }, modeStringToFlags(A) { var B = Ar.flagModes[A]; if (void 0 === B) throw Error("Unknown file open mode: " + A); return B }, flagsToPermissionString(A) { var B = ["r", "w", "rw"][3 & A]; return 512 & A && (B += "w"), B }, nodePermissions: (A, B) => Ar.ignorePermissions ? 0 : B.includes("r") && !(292 & A.mode) || B.includes("w") && !(146 & A.mode) || B.includes("x") && !(73 & A.mode) ? 2 : 0, mayLookup(A) { var B = Ar.nodePermissions(A, "x"); return B || (A.node_ops.lookup ? 0 : 2) }, mayCreate(A, B) { try { return Ar.lookupNode(A, B), 20 } catch (Q) { } return Ar.nodePermissions(A, "wx") }, mayDelete(A, B, Q) { try { C = Ar.lookupNode(A, B) } catch (E) { return E.errno } var C, g = Ar.nodePermissions(A, "wx"); if (g) return g; if (Q) { if (!Ar.isDir(C.mode)) return 54; if (Ar.isRoot(C) || Ar.getPath(C) === Ar.cwd()) return 10 } else if (Ar.isDir(C.mode)) return 31; return 0 }, mayOpen: (A, B) => A ? Ar.isLink(A.mode) ? 32 : Ar.isDir(A.mode) && ("r" !== Ar.flagsToPermissionString(B) || 512 & B) ? 31 : Ar.nodePermissions(A, Ar.flagsToPermissionString(B)) : 44, MAX_OPEN_FDS: 4096, nextfd(A = 0, B = Ar.MAX_OPEN_FDS) { for (var Q = A; Q <= B; Q++)if (!Ar.streams[Q]) return Q; throw new Ar.ErrnoError(33) }, getStream: A => Ar.streams[A], createStream(A, B, Q) { Ar.FSStream || (Ar.FSStream = function () { this.shared = {} }, Ar.FSStream.prototype = {}, Object.defineProperties(Ar.FSStream.prototype, { object: { get: function () { return this.node }, set: function (A) { this.node = A } }, isRead: { get: function () { return (2097155 & this.flags) != 1 } }, isWrite: { get: function () { return (2097155 & this.flags) != 0 } }, isAppend: { get: function () { return 1024 & this.flags } }, flags: { get: function () { return this.shared.flags }, set: function (A) { this.shared.flags = A } }, position: { get: function () { return this.shared.position }, set: function (A) { this.shared.position = A } } })), A = Object.assign(new Ar.FSStream, A); var E = Ar.nextfd(B, Q); return A.fd = E, Ar.streams[E] = A, A }, closeStream(A) { Ar.streams[A] = null }, chrdev_stream_ops: { open(A) { var B = Ar.getDevice(A.node.rdev); A.stream_ops = B.stream_ops, A.stream_ops.open && A.stream_ops.open(A) }, llseek() { throw new Ar.ErrnoError(70) } }, major: A => A >> 8, minor: A => 255 & A, makedev: (A, B) => A << 8 | B, registerDevice(A, B) { Ar.devices[A] = { stream_ops: B } }, getDevice: A => Ar.devices[A], getMounts(A) { for (var B = [], Q = [A]; Q.length;){ var E = Q.pop(); B.push(E), Q.push.apply(Q, E.mounts) } return B }, syncfs(A, B) { "function" == typeof A && (B = A, A = !1), Ar.syncFSRequests++, Ar.syncFSRequests > 1 && h("warning: " + Ar.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work"); var Q = Ar.getMounts(Ar.root.mount), E = 0; function C(A) { return Ar.syncFSRequests--, B(A) } function g(A) { if (A) return g.errored ? void 0 : (g.errored = !0, C(A)); ++E >= Q.length && C(null) } Q.forEach(B => { if (!B.type.syncfs) return g(null); B.type.syncfs(B, A, g) }) }, mount(A, B, Q) { var E, C = "/" === Q, g = !Q; if (C && Ar.root) throw new Ar.ErrnoError(10); if (!C && !g) { var I = Ar.lookupPath(Q, { follow_mount: !1 }); if (Q = I.path, E = I.node, Ar.isMountpoint(E)) throw new Ar.ErrnoError(10); if (!Ar.isDir(E.mode)) throw new Ar.ErrnoError(54) } var w = { type: A, opts: B, mountpoint: Q, mounts: [] }, F = A.mount(w); return F.mount = w, w.root = F, C ? Ar.root = F : E && (E.mounted = w, E.mount && E.mount.mounts.push(w)), F }, unmount(A) { var B = Ar.lookupPath(A, { follow_mount: !1 }); if (!Ar.isMountpoint(B.node)) throw new Ar.ErrnoError(28); var Q = B.node, E = Q.mounted, C = Ar.getMounts(E); Object.keys(Ar.nameTable).forEach(A => { for (var B = Ar.nameTable[A]; B;){ var Q = B.name_next; C.includes(B.mount) && Ar.destroyNode(B), B = Q } }), Q.mounted = null; var g = Q.mount.mounts.indexOf(E); Q.mount.mounts.splice(g, 1) }, lookup: (A, B) => A.node_ops.lookup(A, B), mknod(A, B, Q) { var E = Ar.lookupPath(A, { parent: !0 }).node, C = A$.basename(A); if (!C || "." === C || ".." === C) throw new Ar.ErrnoError(28); var g = Ar.mayCreate(E, C); if (g) throw new Ar.ErrnoError(g); if (!E.node_ops.mknod) throw new Ar.ErrnoError(63); return E.node_ops.mknod(E, C, B, Q) }, create: (A, B) => (B = void 0 !== B ? B : 438, B &= 4095, B |= 32768, Ar.mknod(A, B, 0)), mkdir: (A, B) => (B = void 0 !== B ? B : 511, B &= 1023, B |= 16384, Ar.mknod(A, B, 0)), mkdirTree(A, B) { for (var Q = A.split("/"), E = "", C = 0; C < Q.length; ++C)if (Q[C]) { E += "/" + Q[C]; try { Ar.mkdir(E, B) } catch (g) { if (20 != g.errno) throw g } } }, mkdev: (A, B, Q) => (void 0 === Q && (Q = B, B = 438), B |= 8192, Ar.mknod(A, B, Q)), symlink(A, B) { if (!An.resolve(A)) throw new Ar.ErrnoError(44); var Q = Ar.lookupPath(B, { parent: !0 }).node; if (!Q) throw new Ar.ErrnoError(44); var E = A$.basename(B), C = Ar.mayCreate(Q, E); if (C) throw new Ar.ErrnoError(C); if (!Q.node_ops.symlink) throw new Ar.ErrnoError(63); return Q.node_ops.symlink(Q, E, A) }, rename(A, B) { var Q, E, C, g, I = A$.dirname(A), w = A$.dirname(B), F = A$.basename(A), D = A$.basename(B); if (E = (Q = Ar.lookupPath(A, { parent: !0 })).node, C = (Q = Ar.lookupPath(B, { parent: !0 })).node, !E || !C) throw new Ar.ErrnoError(44); if (E.mount !== C.mount) throw new Ar.ErrnoError(75); var c = Ar.lookupNode(E, F), s = An.relative(A, w); if ("." !== s.charAt(0)) throw new Ar.ErrnoError(28); if ("." !== (s = An.relative(B, I)).charAt(0)) throw new Ar.ErrnoError(55); try { g = Ar.lookupNode(C, D) } catch (t) { } if (c !== g) { var U = Ar.isDir(c.mode), o = Ar.mayDelete(E, F, U); if (o || (o = g ? Ar.mayDelete(C, D, U) : Ar.mayCreate(C, D))) throw new Ar.ErrnoError(o); if (!E.node_ops.rename) throw new Ar.ErrnoError(63); if (Ar.isMountpoint(c) || g && Ar.isMountpoint(g)) throw new Ar.ErrnoError(10); if (C !== E && (o = Ar.nodePermissions(E, "w"))) throw new Ar.ErrnoError(o); Ar.hashRemoveNode(c); try { E.node_ops.rename(c, C, D) } catch (M) { throw M } finally { Ar.hashAddNode(c) } } }, rmdir(A) { var B = Ar.lookupPath(A, { parent: !0 }).node, Q = A$.basename(A), E = Ar.lookupNode(B, Q), C = Ar.mayDelete(B, Q, !0); if (C) throw new Ar.ErrnoError(C); if (!B.node_ops.rmdir) throw new Ar.ErrnoError(63); if (Ar.isMountpoint(E)) throw new Ar.ErrnoError(10); B.node_ops.rmdir(B, Q), Ar.destroyNode(E) }, readdir(A) { var B = Ar.lookupPath(A, { follow: !0 }).node; if (!B.node_ops.readdir) throw new Ar.ErrnoError(54); return B.node_ops.readdir(B) }, unlink(A) { var B = Ar.lookupPath(A, { parent: !0 }).node; if (!B) throw new Ar.ErrnoError(44); var Q = A$.basename(A), E = Ar.lookupNode(B, Q), C = Ar.mayDelete(B, Q, !1); if (C) throw new Ar.ErrnoError(C); if (!B.node_ops.unlink) throw new Ar.ErrnoError(63); if (Ar.isMountpoint(E)) throw new Ar.ErrnoError(10); B.node_ops.unlink(B, Q), Ar.destroyNode(E) }, readlink(A) { var B = Ar.lookupPath(A).node; if (!B) throw new Ar.ErrnoError(44); if (!B.node_ops.readlink) throw new Ar.ErrnoError(28); return An.resolve(Ar.getPath(B.parent), B.node_ops.readlink(B)) }, stat(A, B) { var Q = Ar.lookupPath(A, { follow: !B }).node; if (!Q) throw new Ar.ErrnoError(44); if (!Q.node_ops.getattr) throw new Ar.ErrnoError(63); return Q.node_ops.getattr(Q) }, lstat: A => Ar.stat(A, !0), chmod(A, B, Q) { var E; if (!(E = "string" == typeof A ? Ar.lookupPath(A, { follow: !Q }).node : A).node_ops.setattr) throw new Ar.ErrnoError(63); E.node_ops.setattr(E, { mode: 4095 & B | -4096 & E.mode, timestamp: Date.now() }) }, lchmod(A, B) { Ar.chmod(A, B, !0) }, fchmod(A, B) { var Q = Ar.getStream(A); if (!Q) throw new Ar.ErrnoError(8); Ar.chmod(Q.node, B) }, chown(A, B, Q, E) { var C; if (!(C = "string" == typeof A ? Ar.lookupPath(A, { follow: !E }).node : A).node_ops.setattr) throw new Ar.ErrnoError(63); C.node_ops.setattr(C, { timestamp: Date.now() }) }, lchown(A, B, Q) { Ar.chown(A, B, Q, !0) }, fchown(A, B, Q) { var E = Ar.getStream(A); if (!E) throw new Ar.ErrnoError(8); Ar.chown(E.node, B, Q) }, truncate(A, B) { if (B < 0) throw new Ar.ErrnoError(28); if ("string" == typeof A) { var Q; Q = Ar.lookupPath(A, { follow: !0 }).node } else Q = A; if (!Q.node_ops.setattr) throw new Ar.ErrnoError(63); if (Ar.isDir(Q.mode)) throw new Ar.ErrnoError(31); if (!Ar.isFile(Q.mode)) throw new Ar.ErrnoError(28); var E = Ar.nodePermissions(Q, "w"); if (E) throw new Ar.ErrnoError(E); Q.node_ops.setattr(Q, { size: B, timestamp: Date.now() }) }, ftruncate(A, B) { var Q = Ar.getStream(A); if (!Q) throw new Ar.ErrnoError(8); if ((2097155 & Q.flags) == 0) throw new Ar.ErrnoError(28); Ar.truncate(Q.node, B) }, utime(A, B, Q) { var E = Ar.lookupPath(A, { follow: !0 }).node; E.node_ops.setattr(E, { timestamp: Math.max(B, Q) }) }, open(A, Q, E) { if ("" === A) throw new Ar.ErrnoError(44); if (Q = "string" == typeof Q ? Ar.modeStringToFlags(Q) : Q, E = void 0 === E ? 438 : E, E = 64 & Q ? 4095 & E | 32768 : 0, "object" == typeof A) C = A; else { A = A$.normalize(A); try { var C; C = Ar.lookupPath(A, { follow: !(131072 & Q) }).node } catch (g) { } } var I = !1; if (64 & Q) { if (C) { if (128 & Q) throw new Ar.ErrnoError(20) } else C = Ar.mknod(A, E, 0), I = !0 } if (!C) throw new Ar.ErrnoError(44); if (Ar.isChrdev(C.mode) && (Q &= -513), 65536 & Q && !Ar.isDir(C.mode)) throw new Ar.ErrnoError(54); if (!I) { var w = Ar.mayOpen(C, Q); if (w) throw new Ar.ErrnoError(w) } 512 & Q && !I && Ar.truncate(C, 0), Q &= -131713; var F = Ar.createStream({ node: C, path: Ar.getPath(C), flags: Q, seekable: !0, position: 0, stream_ops: C.stream_ops, ungotten: [], error: !1 }); return F.stream_ops.open && F.stream_ops.open(F), !B.logReadFiles || 1 & Q || (Ar.readFiles || (Ar.readFiles = {}), A in Ar.readFiles || (Ar.readFiles[A] = 1)), F }, close(A) { if (Ar.isClosed(A)) throw new Ar.ErrnoError(8); A.getdents && (A.getdents = null); try { A.stream_ops.close && A.stream_ops.close(A) } catch (B) { throw B } finally { Ar.closeStream(A.fd) } A.fd = null }, isClosed: A => null === A.fd, llseek(A, B, Q) { if (Ar.isClosed(A)) throw new Ar.ErrnoError(8); if (!A.seekable || !A.stream_ops.llseek) throw new Ar.ErrnoError(70); if (0 != Q && 1 != Q && 2 != Q) throw new Ar.ErrnoError(28); return A.position = A.stream_ops.llseek(A, B, Q), A.ungotten = [], A.position }, read(A, B, Q, E, C) { if (E < 0 || C < 0) throw new Ar.ErrnoError(28); if (Ar.isClosed(A) || (2097155 & A.flags) == 1) throw new Ar.ErrnoError(8); if (Ar.isDir(A.node.mode)) throw new Ar.ErrnoError(31); if (!A.stream_ops.read) throw new Ar.ErrnoError(28); var g = void 0 !== C; if (g) { if (!A.seekable) throw new Ar.ErrnoError(70) } else C = A.position; var I = A.stream_ops.read(A, B, Q, E, C); return g || (A.position += I), I }, write(A, B, Q, E, C, g) { if (E < 0 || C < 0) throw new Ar.ErrnoError(28); if (Ar.isClosed(A) || (2097155 & A.flags) == 0) throw new Ar.ErrnoError(8); if (Ar.isDir(A.node.mode)) throw new Ar.ErrnoError(31); if (!A.stream_ops.write) throw new Ar.ErrnoError(28); A.seekable && 1024 & A.flags && Ar.llseek(A, 0, 2); var I = void 0 !== C; if (I) { if (!A.seekable) throw new Ar.ErrnoError(70) } else C = A.position; var w = A.stream_ops.write(A, B, Q, E, C, g); return I || (A.position += w), w }, allocate(A, B, Q) { if (Ar.isClosed(A)) throw new Ar.ErrnoError(8); if (B < 0 || Q <= 0) throw new Ar.ErrnoError(28); if ((2097155 & A.flags) == 0) throw new Ar.ErrnoError(8); if (!Ar.isFile(A.node.mode) && !Ar.isDir(A.node.mode)) throw new Ar.ErrnoError(43); if (!A.stream_ops.allocate) throw new Ar.ErrnoError(138); A.stream_ops.allocate(A, B, Q) }, mmap(A, B, Q, E, C) { if ((2 & E) != 0 && (2 & C) == 0 && (2097155 & A.flags) != 2 || (2097155 & A.flags) == 1) throw new Ar.ErrnoError(2); if (!A.stream_ops.mmap) throw new Ar.ErrnoError(43); return A.stream_ops.mmap(A, B, Q, E, C) }, msync: (A, B, Q, E, C) => A && A.stream_ops.msync ? A.stream_ops.msync(A, B, Q, E, C) : 0, munmap: A => 0, ioctl(A, B, Q) { if (!A.stream_ops.ioctl) throw new Ar.ErrnoError(59); return A.stream_ops.ioctl(A, B, Q) }, readFile(A, B = {}) { if (B.flags = B.flags || 0, B.encoding = B.encoding || "binary", "utf8" !== B.encoding && "binary" !== B.encoding) throw Error('Invalid encoding type "' + B.encoding + '"'); var Q, E = Ar.open(A, B.flags), C = Ar.stat(A).size, g = new Uint8Array(C); return Ar.read(E, g, 0, C, 0), "utf8" === B.encoding ? Q = W(g, 0) : "binary" === B.encoding && (Q = g), Ar.close(E), Q }, writeFile(A, B, Q = {}) { Q.flags = Q.flags || 577; var E = Ar.open(A, Q.flags, Q.mode); if ("string" == typeof B) { var C = new Uint8Array(u(B) + 1), g = V(B, C, 0, C.length); Ar.write(E, C, 0, g, void 0, Q.canOwn) } else if (ArrayBuffer.isView(B)) Ar.write(E, B, 0, B.byteLength, void 0, Q.canOwn); else throw Error("Unsupported data type"); Ar.close(E) }, cwd: () => Ar.currentPath, chdir(A) { var B = Ar.lookupPath(A, { follow: !0 }); if (null === B.node) throw new Ar.ErrnoError(44); if (!Ar.isDir(B.node.mode)) throw new Ar.ErrnoError(54); var Q = Ar.nodePermissions(B.node, "x"); if (Q) throw new Ar.ErrnoError(Q); Ar.currentPath = B.path }, createDefaultDirectories() { Ar.mkdir("/tmp"), Ar.mkdir("/home"), Ar.mkdir("/home/web_user") }, createDefaultDevices() { Ar.mkdir("/dev"), Ar.registerDevice(Ar.makedev(1, 3), { read: () => 0, write: (A, B, Q, E, C) => E }), Ar.mkdev("/dev/null", Ar.makedev(1, 3)), Ae.register(Ar.makedev(5, 0), Ae.default_tty_ops), Ae.register(Ar.makedev(6, 0), Ae.default_tty1_ops), Ar.mkdev("/dev/tty", Ar.makedev(5, 0)), Ar.mkdev("/dev/tty1", Ar.makedev(6, 0)); var A = function A() { if ("object" != typeof crypto || "function" != typeof crypto.getRandomValues) return () => Ag("randomDevice"); var B = new Uint8Array(1); return () => (crypto.getRandomValues(B), B[0]) }(); Ar.createDevice("/dev", "random", A), Ar.createDevice("/dev", "urandom", A), Ar.mkdir("/dev/shm"), Ar.mkdir("/dev/shm/tmp") }, createSpecialDirectories() { Ar.mkdir("/proc"); var A = Ar.mkdir("/proc/self"); Ar.mkdir("/proc/self/fd"), Ar.mount({ mount() { var B = Ar.createNode(A, "fd", 16895, 73); return B.node_ops = { lookup(A, B) { var Q = Ar.getStream(+B); if (!Q) throw new Ar.ErrnoError(8); var E = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: () => Q.path } }; return E.parent = E, E } }, B } }, {}, "/proc/self/fd") }, createStandardStreams() { B.stdin ? Ar.createDevice("/dev", "stdin", B.stdin) : Ar.symlink("/dev/tty", "/dev/stdin"), B.stdout ? Ar.createDevice("/dev", "stdout", null, B.stdout) : Ar.symlink("/dev/tty", "/dev/stdout"), B.stderr ? Ar.createDevice("/dev", "stderr", null, B.stderr) : Ar.symlink("/dev/tty1", "/dev/stderr"), Ar.open("/dev/stdin", 0), Ar.open("/dev/stdout", 1), Ar.open("/dev/stderr", 1) }, ensureErrnoError() { Ar.ErrnoError || (Ar.ErrnoError = function A(B, Q) { this.node = Q, this.setErrno = function (A) { this.errno = A }, this.setErrno(B), this.message = "FS error" }, Ar.ErrnoError.prototype = Error(), Ar.ErrnoError.prototype.constructor = Ar.ErrnoError, [44].forEach(A => { Ar.genericErrors[A] = new Ar.ErrnoError(A), Ar.genericErrors[A].stack = "<generic error, no stack>" })) }, staticInit() { Ar.ensureErrnoError(), Ar.nameTable = Array(4096), Ar.mount(Aa, {}, "/"), Ar.createDefaultDirectories(), Ar.createDefaultDevices(), Ar.createSpecialDirectories(), Ar.filesystems = { MEMFS: Aa } }, init(A, Q, E) { Ar.init.initialized = !0, Ar.ensureErrnoError(), B.stdin = A || B.stdin, B.stdout = Q || B.stdout, B.stderr = E || B.stderr, Ar.createStandardStreams() }, quit() { Ar.init.initialized = !1; for (var A = 0; A < Ar.streams.length; A++){ var B = Ar.streams[A]; B && Ar.close(B) } }, getMode(A, B) { var Q = 0; return A && (Q |= 365), B && (Q |= 146), Q }, findObject(A, B) { var Q = Ar.analyzePath(A, B); return Q.exists ? Q.object : null }, analyzePath(A, B) { try { var Q = Ar.lookupPath(A, { follow: !B }); A = Q.path } catch (E) { } var C = { isRoot: !1, exists: !1, error: 0, name: null, path: null, object: null, parentExists: !1, parentPath: null, parentObject: null }; try { var Q = Ar.lookupPath(A, { parent: !0 }); C.parentExists = !0, C.parentPath = Q.path, C.parentObject = Q.node, C.name = A$.basename(A), Q = Ar.lookupPath(A, { follow: !B }), C.exists = !0, C.path = Q.path, C.object = Q.node, C.name = Q.node.name, C.isRoot = "/" === Q.path } catch (g) { C.error = g.errno } return C }, createPath(A, B, Q, E) { A = "string" == typeof A ? A : Ar.getPath(A); for (var C = B.split("/").reverse(); C.length;){ var g = C.pop(); if (g) { var I = A$.join2(A, g); try { Ar.mkdir(I) } catch (w) { } A = I } } return I }, createFile(A, B, Q, E, C) { var g = A$.join2("string" == typeof A ? A : Ar.getPath(A), B), I = Ar.getMode(E, C); return Ar.create(g, I) }, createDataFile(A, B, Q, E, C, g) { var I = B; A && (A = "string" == typeof A ? A : Ar.getPath(A), I = B ? A$.join2(A, B) : A); var w = Ar.getMode(E, C), F = Ar.create(I, w); if (Q) { if ("string" == typeof Q) { for (var D = Array(Q.length), c = 0, s = Q.length; c < s; ++c)D[c] = Q.charCodeAt(c); Q = D } Ar.chmod(F, 146 | w); var t = Ar.open(F, 577); Ar.write(t, Q, 0, Q.length, 0, g), Ar.close(t), Ar.chmod(F, w) } return F }, createDevice(A, B, Q, E) { var C = A$.join2("string" == typeof A ? A : Ar.getPath(A), B), g = Ar.getMode(!!Q, !!E); Ar.createDevice.major || (Ar.createDevice.major = 64); var I = Ar.makedev(Ar.createDevice.major++, 0); return Ar.registerDevice(I, { open(A) { A.seekable = !1 }, close(A) { E && E.buffer && E.buffer.length && E(10) }, read(A, B, E, C, g) { for (var I, w = 0, F = 0; F < C; F++){ try { I = Q() } catch (D) { throw new Ar.ErrnoError(29) } if (void 0 === I && 0 === w) throw new Ar.ErrnoError(6); if (null == I) break; w++, B[E + F] = I } return w && (A.node.timestamp = Date.now()), w }, write(A, B, Q, C, g) { for (var I = 0; I < C; I++)try { E(B[Q + I]) } catch (w) { throw new Ar.ErrnoError(29) } return C && (A.node.timestamp = Date.now()), I } }), Ar.mkdev(C, g, I) }, forceLoadFile(A) { if (A.isDevice || A.isFolder || A.link || A.contents) return !0; if ("undefined" != typeof XMLHttpRequest) throw Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."); if (g) try { A.contents = AY(g(A.url), !0), A.usedBytes = A.contents.length } catch (B) { throw new Ar.ErrnoError(29) } else throw Error("Cannot load without read() or XMLHttpRequest.") }, createLazyFile(A, B, Q, E, C) { function g() { this.lengthKnown = !1, this.chunks = [] } if (g.prototype.get = function A(B) { if (!(B > this.length - 1) && !(B < 0)) { var Q = B % this.chunkSize, E = B / this.chunkSize | 0; return this.getter(E)[Q] } }, g.prototype.setDataGetter = function A(B) { this.getter = B }, g.prototype.cacheLength = function A() { var B, E = new XMLHttpRequest; if (E.open("HEAD", Q, !1), E.send(null), !(E.status >= 200 && E.status < 300 || 304 === E.status)) throw Error("Couldn't load " + Q + ". Status: " + E.status); var C = Number(E.getResponseHeader("Content-length")), g = (B = E.getResponseHeader("Accept-Ranges")) && "bytes" === B, I = (B = E.getResponseHeader("Content-Encoding")) && "gzip" === B, w = 1048576; g || (w = C); var F = (A, B) => { if (A > B) throw Error("invalid range (" + A + ", " + B + ") or no bytes requested!"); if (B > C - 1) throw Error("only " + C + " bytes available! programmer error!"); var E = new XMLHttpRequest; if (E.open("GET", Q, !1), C !== w && E.setRequestHeader("Range", "bytes=" + A + "-" + B), E.responseType = "arraybuffer", E.overrideMimeType && E.overrideMimeType("text/plain; charset=x-user-defined"), E.send(null), !(E.status >= 200 && E.status < 300 || 304 === E.status)) throw Error("Couldn't load " + Q + ". Status: " + E.status); return void 0 !== E.response ? new Uint8Array(E.response || []) : AY(E.responseText || "", !0) }, D = this; D.setDataGetter(A => { var B = A * w, Q = (A + 1) * w - 1; if (Q = Math.min(Q, C - 1), void 0 === D.chunks[A] && (D.chunks[A] = F(B, Q)), void 0 === D.chunks[A]) throw Error("doXHR failed!"); return D.chunks[A] }), (I || !C) && (w = C = 1, w = C = this.getter(0).length, Z("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = C, this._chunkSize = w, this.lengthKnown = !0 }, "undefined" != typeof XMLHttpRequest) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc"; var I = { isDevice: !1, url: Q }, w = Ar.createFile(A, B, I, E, C); I.contents ? w.contents = I.contents : I.url && (w.contents = null, w.url = I.url), Object.defineProperties(w, { usedBytes: { get: function () { return this.contents.length } } }); var I, F = {}; function D(A, B, Q, E, C) { var g = A.node.contents; if (C >= g.length) return 0; var I = Math.min(g.length - C, E); if (g.slice) for (var w = 0; w < I; w++)B[Q + w] = g[C + w]; else for (var w = 0; w < I; w++)B[Q + w] = g.get(C + w); return I } return Object.keys(w.stream_ops).forEach(A => { var B = w.stream_ops[A]; F[A] = function A() { return Ar.forceLoadFile(w), B.apply(null, arguments) } }), F.read = (A, B, Q, E, C) => (Ar.forceLoadFile(w), D(A, B, Q, E, C)), F.mmap = (A, B, Q, E, C) => { Ar.forceLoadFile(w); var g, I = void Ag(); if (!I) throw new Ar.ErrnoError(48); return D(A, U, I, B, Q), { ptr: I, allocated: !0 } }, w.stream_ops = F, w }, createPreloadedFile(A, B, Q, E, C, g, w, F, D, c) { var s, t, U, o, M, G, $ = B ? An.resolve(A$.join2(A, B)) : A, n = G = "cp " + $; function Y(Q) { function I(Q) { c && c(), F || Ar.createDataFile(A, B, Q, E, C, D), g && g(), AC(n) } !Browser.handledByPreloadPlugin(Q, $, I, () => { w && w(), AC(n) }) && I(Q) } (AE(n), "string" == typeof Q) ? (s = Q, t = A => Y(A), U = w, M = o = "al " + s, I(s, A => { X(A, 'Loading data file "' + s + '" failed (no arrayBuffer).'), t(new Uint8Array(A)), M && AC(M) }, A => { if (U) U(); else throw 'Loading data file "' + s + '" failed.' }), M && AE(M)) : Y(Q) }, indexedDB: () => window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB, DB_NAME: () => "EM_FS_" + window.location.pathname, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB(A, B, Q) { B = B || (() => { }), Q = Q || (() => { }); var E = Ar.indexedDB(); try { var C = E.open(Ar.DB_NAME(), Ar.DB_VERSION) } catch (g) { return Q(g) } C.onupgradeneeded = () => { Z("creating db"), C.result.createObjectStore(Ar.DB_STORE_NAME) }, C.onsuccess = () => { var E = C.result.transaction([Ar.DB_STORE_NAME], "readwrite"), g = E.objectStore(Ar.DB_STORE_NAME), I = 0, w = 0, F = A.length; function D() { 0 == w ? B() : Q() } A.forEach(A => { var B = g.put(Ar.analyzePath(A).object.contents, A); B.onsuccess = () => { ++I + w == F && D() }, B.onerror = () => { I + ++w == F && D() } }), E.onerror = Q }, C.onerror = Q }, loadFilesFromDB(A, B, Q) { B = B || (() => { }), Q = Q || (() => { }); var E = Ar.indexedDB(); try { var C = E.open(Ar.DB_NAME(), Ar.DB_VERSION) } catch (g) { return Q(g) } C.onupgradeneeded = Q, C.onsuccess = () => { var E = C.result; try { var g = E.transaction([Ar.DB_STORE_NAME], "readonly") } catch (I) { Q(I); return } var w = g.objectStore(Ar.DB_STORE_NAME), F = 0, D = 0, c = A.length; function s() { 0 == D ? B() : Q() } A.forEach(A => { var B = w.get(A); B.onsuccess = () => { Ar.analyzePath(A).exists && Ar.unlink(A), Ar.createDataFile(A$.dirname(A), A$.basename(A), B.result, !0, !0, !0), ++F + D == c && s() }, B.onerror = () => { F + ++D == c && s() } }), g.onerror = Q }, C.onerror = Q } }, AN = { DEFAULT_POLLMASK: 5, calculateAt: function (A, B, Q) { if (A$.isAbs(B)) return B; if (-100 === A) E = Ar.cwd(); else { var E, C = Ar.getStream(A); if (!C) throw new Ar.ErrnoError(8); E = C.path } if (0 == B.length) { if (!Q) throw new Ar.ErrnoError(44); return E } return A$.join2(E, B) }, doStat: function (A, B, Q) { try { var E = A(B) } catch (C) { if (C && C.node && A$.normalize(B) !== A$.normalize(Ar.getPath(C.node))) return -54; throw C } return $[Q >> 2] = E.dev, $[Q + 8 >> 2] = E.ino, $[Q + 12 >> 2] = E.mode, $[Q + 16 >> 2] = E.nlink, $[Q + 20 >> 2] = E.uid, $[Q + 24 >> 2] = E.gid, $[Q + 28 >> 2] = E.rdev, a = [E.size >>> 0, +Math.abs(i = E.size) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[Q + 40 >> 2] = a[0], $[Q + 44 >> 2] = a[1], $[Q + 48 >> 2] = 4096, $[Q + 52 >> 2] = E.blocks, a = [Math.floor(E.atime.getTime() / 1e3) >>> 0, +Math.abs(i = Math.floor(E.atime.getTime() / 1e3)) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[Q + 56 >> 2] = a[0], $[Q + 60 >> 2] = a[1], $[Q + 64 >> 2] = 0, a = [Math.floor(E.mtime.getTime() / 1e3) >>> 0, +Math.abs(i = Math.floor(E.mtime.getTime() / 1e3)) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[Q + 72 >> 2] = a[0], $[Q + 76 >> 2] = a[1], $[Q + 80 >> 2] = 0, a = [Math.floor(E.ctime.getTime() / 1e3) >>> 0, +Math.abs(i = Math.floor(E.ctime.getTime() / 1e3)) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[Q + 88 >> 2] = a[0], $[Q + 92 >> 2] = a[1], $[Q + 96 >> 2] = 0, a = [E.ino >>> 0, +Math.abs(i = E.ino) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0,], $[Q + 104 >> 2] = a[0], $[Q + 108 >> 2] = a[1], 0 }, doMsync: function (A, B, Q, E, C) { var g = o.slice(A, A + Q); Ar.msync(B, g, C, Q, E) }, varargs: void 0, get: function () { return AN.varargs += 4, $[AN.varargs - 4 >> 2] }, getStr: function (A) { return S(A) }, getStreamFromFD: function (A) { var B = Ar.getStream(A); if (!B) throw new Ar.ErrnoError(8); return B } }; function AJ() { return !0 } function AL(A) { try { return c.grow(A - t.byteLength + 65535 >>> 16), O(c.buffer), 1 } catch (B) { } } r = () => performance.now(); var Ad = 0; function Af(A) { Ad = A } function Ak(A, B) { A < 128 ? B.push(A) : B.push(A % 128 | 128, A >> 7) } var AZ = []; function Ah(A) { var B = AZ[A]; return B || (A >= AZ.length && (AZ.length = A + 1), AZ[A] = B = l.get(A)), B } var Ab = void 0, A0 = []; function Ay(A, B) { l.set(A, B), AZ[A] = l.get(A) } function AH(A, B) { if (Ab || (Ab = new WeakMap, function A(B, Q) { if (Ab) for (var E = B; E < B + Q; E++){ var C = Ah(E); C && Ab.set(C, E) } }(0, l.length)), Ab.has(A)) return Ab.get(A); var Q = function A() { if (A0.length) return A0.pop(); try { l.grow(1) } catch (B) { if (!(B instanceof RangeError)) throw B; throw "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH." } return l.length - 1 }(); try { Ay(Q, A) } catch (E) { if (!(E instanceof TypeError)) throw E; var C = function A(B, Q) { if ("function" == typeof WebAssembly.Function) return new WebAssembly.Function(function A(B) { for (var Q = { i: "i32", j: "i64", f: "f32", d: "f64", p: "i32" }, E = { parameters: [], results: "v" == B[0] ? [] : [Q[B[0]]] }, C = 1; C < B.length; ++C)E.parameters.push(Q[B[C]]); return E }(Q), B); var E = [1, 96], C = Q.slice(0, 1), g = Q.slice(1), I = { i: 127, p: 127, j: 126, f: 125, d: 124 }; Ak(g.length, E); for (var w = 0; w < g.length; ++w)E.push(I[g[w]]); "v" == C ? E.push(0) : E.push(1, I[C]); var F = [0, 97, 115, 109, 1, 0, 0, 0, 1]; Ak(E.length, F), F.push.apply(F, E), F.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0); var D = new WebAssembly.Module(new Uint8Array(F)); return new WebAssembly.Instance(D, { e: { f: B } }).exports.f }(A, B); Ay(Q, C) } return Ab.set(A, Q), Q } function AX(A) { Ab.delete(Ah(A)), A0.push(A) } function Am(A, B) { var Q; return Q = 1 == B ? B0(A.length) : BL(A.length), A.subarray || A.slice || (A = new Uint8Array(A)), o.set(A, Q), Q } function A7(A) { for (var B = ""; ;){ var Q = o[A++ >> 0]; if (!Q) return B; B += String.fromCharCode(Q) } } function AW(A, B) { return function A(B, Q, E) { for (var C = 0; C < B.length; ++C)U[Q++ >> 0] = B.charCodeAt(C); E || (U[Q >> 0] = 0) }(A, B, !1) } var AS = "undefined" != typeof TextDecoder ? new TextDecoder("utf-16le") : void 0; function AV(A, B) { for (var Q = A, E = Q >> 1, C = E + B / 2; !(E >= C) && G[E];)++E; if ((Q = E << 1) - A > 32 && AS) return AS.decode(o.subarray(A, Q)); for (var g = "", I = 0; !(I >= B / 2); ++I){ var w = M[A + 2 * I >> 1]; if (0 == w) break; g += String.fromCharCode(w) } return g } function Av(A, B, Q) { if (void 0 === Q && (Q = 2147483647), Q < 2) return 0; for (var E = B, C = (Q -= 2) < 2 * A.length ? Q / 2 : A.length, g = 0; g < C; ++g){ var I = A.charCodeAt(g); M[B >> 1] = I, B += 2 } return M[B >> 1] = 0, B - E } function Au(A) { return 2 * A.length } function A1(A, B) { for (var Q = 0, E = ""; !(Q >= B / 4);){ var C = $[A + 4 * Q >> 2]; if (0 == C) break; if (++Q, C >= 65536) { var g = C - 65536; E += String.fromCharCode(55296 | g >> 10, 56320 | 1023 & g) } else E += String.fromCharCode(C) } return E } function AO(A, B, Q) { if (void 0 === Q && (Q = 2147483647), Q < 4) return 0; for (var E = B, C = E + Q - 4, g = 0; g < A.length; ++g){ var I = A.charCodeAt(g); if (I >= 55296 && I <= 57343 && (I = 65536 + ((1023 & I) << 10) | 1023 & A.charCodeAt(++g)), $[B >> 2] = I, (B += 4) + 4 > C) break } return $[B >> 2] = 0, B - E } function A6(A) { for (var B = 0, Q = 0; Q < A.length; ++Q){ var E = A.charCodeAt(Q); E >= 55296 && E <= 57343 && ++Q, B += 4 } return B } function Ap(A) { var B = u(A) + 1, Q = BL(B); return Q && V(A, U, Q, B), Q } function Aj(A) { var B = u(A) + 1, Q = B0(B); return V(A, U, Q, B), Q } function Az(A, B, Q) { var E, C; Ax("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!"), Q && (E = U[C = B + u(A)]), v(A, B, 1 / 0), Q && (U[C] = E) } function Ax(A) { Ax.shown || (Ax.shown = {}), Ax.shown[A] || (Ax.shown[A] = 1, h(A)) } function A2(A) { return B["_" + A] } function A_(A, B, Q, E, C) { var g = { string(A) { var B = 0; if (null != A && 0 !== A) { var Q = (A.length << 2) + 1; B = B0(Q), v(A, B, Q) } return B }, array(A) { var B, Q, E = B0(A.length); return B = A, Q = E, U.set(B, Q), E } }, I = A2(A), w = [], F = 0; if (E) for (var D = 0; D < E.length; D++){ var c = g[Q[D]]; c ? (0 === F && (F = Bh()), w[D] = c(E[D])) : w[D] = E[D] } var s = AT.currData, t = I.apply(null, w); function o(A) { var Q; return 0 !== F && Bb(F), Q = A, "string" === B ? S(Q) : "boolean" === B ? Boolean(Q) : Q } var M = C && C.async; return AT.currData != s ? AT.whenDone().then(o) : (t = o(t), M) ? Promise.resolve(t) : t } function AK() { return Ad } function A5(A) { try { return A() } catch (B) { Ag(B) } } var AT = { State: { Normal: 0, Unwinding: 1, Rewinding: 2, Disabled: 3 }, state: 0, StackSize: 4096, currData: null, handleSleepReturnValue: 0, exportCallStack: [], callStackNameToId: {}, callStackIdToName: {}, callStackId: 0, asyncPromiseHandlers: null, sleepCallbacks: [], getCallStackId: function (A) { var B = AT.callStackNameToId[A]; return void 0 === B && (B = AT.callStackId++, AT.callStackNameToId[A] = B, AT.callStackIdToName[B] = A), B }, instrumentWasmImports: function (A) { var B = ["env.invoke_*", "env.emscripten_sleep", "env.emscripten_wget", "env.emscripten_wget_data", "env.emscripten_idb_load", "env.emscripten_idb_store", "env.emscripten_idb_delete", "env.emscripten_idb_exists", "env.emscripten_idb_load_blob", "env.emscripten_idb_store_blob", "env.SDL_Delay", "env.emscripten_scan_registers", "env.emscripten_lazy_load_code", "env.emscripten_fiber_swap", "wasi_snapshot_preview1.fd_sync", "env.__wasi_fd_sync", "env._emval_await", "env._dlopen_js", "env.__asyncjs__*",].map(A => A.split(".")[1]); for (var Q in A) !function (Q) { var E = A[Q]; E.sig, "function" == typeof E && (B.indexOf(Q) >= 0 || Q.startsWith("__asyncjs__")) }(Q) }, instrumentWasmExports: function (A) { var B = {}; for (var Q in A) !function (Q) { var E = A[Q]; "function" == typeof E ? B[Q] = function () { AT.exportCallStack.push(Q); try { return E.apply(null, arguments) } finally { !H && (X(AT.exportCallStack.pop() === Q), AT.maybeStopUnwind()) } } : B[Q] = E }(Q); return B }, maybeStopUnwind: function () { AT.currData && AT.state === AT.State.Unwinding && 0 === AT.exportCallStack.length && (AT.state = AT.State.Normal, A5(BS), "undefined" != typeof Fibers && Fibers.trampoline()) }, whenDone: function () { return new Promise((A, B) => { AT.asyncPromiseHandlers = { resolve: A, reject: B } }) }, allocateData: function () { var A = BL(12 + AT.StackSize); return AT.setDataHeader(A, A + 12, AT.StackSize), AT.setDataRewindFunc(A), A }, setDataHeader: function (A, B, Q) { $[A >> 2] = B, $[A + 4 >> 2] = B + Q }, setDataRewindFunc: function (A) { var B = AT.exportCallStack[0], Q = AT.getCallStackId(B); $[A + 8 >> 2] = Q }, getDataRewindFunc: function (A) { var Q = $[A + 8 >> 2], E = AT.callStackIdToName[Q]; return B.asm[E] }, doRewind: function (A) { return AT.getDataRewindFunc(A)() }, handleSleep: function (A) { if (!H) { if (AT.state === AT.State.Normal) { var B = !1, Q = !1; A(A => { if (!H && (AT.handleSleepReturnValue = A || 0, B = !0, Q)) { AT.state = AT.State.Rewinding, A5(() => BV(AT.currData)), "undefined" != typeof Browser && Browser.mainLoop.func && Browser.mainLoop.resume(); var E, C = !1; try { E = AT.doRewind(AT.currData) } catch (g) { E = g, C = !0 } var I = !1; if (!AT.currData) { var w = AT.asyncPromiseHandlers; w && (AT.asyncPromiseHandlers = null, (C ? w.reject : w.resolve)(E), I = !0) } if (C && !I) throw E } }), Q = !0, B || (AT.state = AT.State.Unwinding, AT.currData = AT.allocateData(), "undefined" != typeof Browser && Browser.mainLoop.func && Browser.mainLoop.pause(), A5(() => BW(AT.currData))) } else AT.state === AT.State.Rewinding ? (AT.state = AT.State.Normal, A5(Bv), BJ(AT.currData), AT.currData = null, AT.sleepCallbacks.forEach(A => (function A(B) { if (!H) try { B() } catch (Q) { !function A(B) { if (B instanceof Ac || "unwind" == B) return s; f(1, B) }(Q) } })(A))) : Ag("invalid state: " + AT.state); return AT.handleSleepReturnValue } }, handleAsync: function (A) { return AT.handleSleep(B => { A().then(B) }) } }, AP = function (A, B, Q, E) { A || (A = this), this.parent = A, this.mount = A.mount, this.mounted = null, this.id = Ar.nextInode++, this.name = B, this.mode = Q, this.node_ops = {}, this.stream_ops = {}, this.rdev = E }; Object.defineProperties(AP.prototype, { read: { get: function () { return (365 & this.mode) == 365 }, set: function (A) { A ? this.mode |= 365 : this.mode &= -366 } }, write: { get: function () { return (146 & this.mode) == 146 }, set: function (A) { A ? this.mode |= 146 : this.mode &= -147 } }, isFolder: { get: function () { return Ar.isDir(this.mode) } }, isDevice: { get: function () { return Ar.isChrdev(this.mode) } } }), Ar.FSNode = AP, Ar.staticInit(), B.FS_createPath = Ar.createPath, B.FS_createDataFile = Ar.createDataFile, B.FS_createPreloadedFile = Ar.createPreloadedFile, B.FS_unlink = Ar.unlink, B.FS_createLazyFile = Ar.createLazyFile, B.FS_createDevice = Ar.createDevice; var A3 = !1, A4 = "function" == typeof atob ? atob : function (A) { var B, Q, E, C, g, I, w, F = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", D = "", c = 0; A = A.replace(/[^A-Za-z0-9\+\/\=]/g, ""); do C = F.indexOf(A.charAt(c++)), g = F.indexOf(A.charAt(c++)), I = F.indexOf(A.charAt(c++)), w = F.indexOf(A.charAt(c++)), B = C << 2 | g >> 4, Q = (15 & g) << 4 | I >> 2, E = (3 & I) << 6 | w, D += String.fromCharCode(B), 64 !== I && (D += String.fromCharCode(Q)), 64 !== w && (D += String.fromCharCode(E)); while (c < A.length); return D }; function A8(A) { if (Aw(A)) return function A(B) { try { for (var Q = A4(B), E = new Uint8Array(Q.length), C = 0; C < Q.length; ++C)E[C] = Q.charCodeAt(C); return E } catch (g) { throw Error("Converting base64 string to bytes failed.") } }(A.slice(AI.length)) } var Aq = { __assert_fail: function A(B, Q, E, C) { Ag("Assertion failed: " + S(B) + ", at: " + [Q ? S(Q) : "unknown filename", E, C ? S(C) : "unknown function",]) }, __syscall_fcntl64: function A(B, Q, E) { AN.varargs = E; try { var C = AN.getStreamFromFD(B); switch (Q) { case 0: var g, I = AN.get(); if (I < 0) return -28; return (g = Ar.createStream(C, I)).fd; case 1: case 2: case 6: case 7: return 0; case 3: return C.flags; case 4: var I = AN.get(); return C.flags |= I, 0; case 5: var I = AN.get(); return M[I + 0 >> 1] = 2, 0; case 16: case 8: default: return -28; case 9: return $[Bd() >> 2] = 28, -1 } } catch (w) { if (void 0 === Ar || !(w instanceof Ar.ErrnoError)) throw w; return -w.errno } }, __syscall_fstat64: function A(B, Q) { try { var E = AN.getStreamFromFD(B); return AN.doStat(Ar.stat, E.path, Q) } catch (C) { if (void 0 === Ar || !(C instanceof Ar.ErrnoError)) throw C; return -C.errno } }, __syscall_ioctl: function A(B, Q, E) { AN.varargs = E; try { var C = AN.getStreamFromFD(B); switch (Q) { case 21509: case 21505: case 21510: case 21511: case 21512: case 21506: case 21507: case 21508: case 21523: case 21524: if (!C.tty) return -59; return 0; case 21519: if (!C.tty) return -59; var g = AN.get(); return $[g >> 2] = 0, 0; case 21520: if (!C.tty) return -59; return -28; case 21531: var g = AN.get(); return Ar.ioctl(C, Q, g); default: return -28 } } catch (I) { if (void 0 === Ar || !(I instanceof Ar.ErrnoError)) throw I; return -I.errno } }, __syscall_lstat64: function A(B, Q) { try { return B = AN.getStr(B), AN.doStat(Ar.lstat, B, Q) } catch (E) { if (void 0 === Ar || !(E instanceof Ar.ErrnoError)) throw E; return -E.errno } }, __syscall_newfstatat: function A(B, Q, E, C) { try { Q = AN.getStr(Q); var g = 256 & C, I = 4096 & C; return C &= -4353, Q = AN.calculateAt(B, Q, I), AN.doStat(g ? Ar.lstat : Ar.stat, Q, E) } catch (w) { if (void 0 === Ar || !(w instanceof Ar.ErrnoError)) throw w; return -w.errno } }, __syscall_openat: function A(B, Q, E, C) { AN.varargs = C; try { Q = AN.getStr(Q), Q = AN.calculateAt(B, Q); var g = C ? AN.get() : 0; return Ar.open(Q, E, g).fd } catch (I) { if (void 0 === Ar || !(I instanceof Ar.ErrnoError)) throw I; return -I.errno } }, __syscall_stat64: function A(B, Q) { try { return B = AN.getStr(B), AN.doStat(Ar.stat, B, Q) } catch (E) { if (void 0 === Ar || !(E instanceof Ar.ErrnoError)) throw E; return -E.errno } }, _emscripten_date_now: function A() { return Date.now() }, _emscripten_get_now_is_monotonic: AJ, emscripten_get_now: r, emscripten_memcpy_big: function A(B, Q, E) { o.copyWithin(B, Q, Q + E) }, emscripten_resize_heap: function A(B) { var Q = o.length; if ((B >>>= 0) > 2147483648) return !1; for (var E = 1; E <= 4; E *= 2){ var C, g, I, w = Q * (1 + .2 / E); if (w = Math.min(w, B + 100663296), AL(Math.min(2147483648, (C = Math.max(B, w)) + ((g = 65536) - C % g) % g))) return !0 } return !1 }, fd_close: function A(B) { try { var Q = AN.getStreamFromFD(B); return Ar.close(Q), 0 } catch (E) { if (void 0 === Ar || !(E instanceof Ar.ErrnoError)) throw E; return E.errno } }, fd_read: function A(B, Q, E, C) { try { var g = AN.getStreamFromFD(B), I = function A(B, Q, E, C) { for (var g = 0, I = 0; I < E; I++){ var w = n[Q >> 2], F = n[Q + 4 >> 2]; Q += 8; var D = Ar.read(B, U, w, F, void 0); if (D < 0) return -1; if (g += D, D < F) break } return g }(g, Q, E); return n[C >> 2] = I, 0 } catch (w) { if (void 0 === Ar || !(w instanceof Ar.ErrnoError)) throw w; return w.errno } }, fd_seek: function A(B, Q, E, C, g) { try { var I, w, F = (I = Q, (w = E) + 2097152 >>> 0 < 4194305 - !!I ? (I >>> 0) + 4294967296 * w : NaN); if (isNaN(F)) return 61; var D = AN.getStreamFromFD(B); return Ar.llseek(D, F, C), a = [D.position >>> 0, (i = D.position, +Math.abs(i) >= 1 ? i > 0 ? (0 | Math.min(+Math.floor(i / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((i - +(~~i >>> 0)) / 4294967296) >>> 0 : 0),], $[g >> 2] = a[0], $[g + 4 >> 2] = a[1], D.getdents && 0 === F && 0 === C && (D.getdents = null), 0 } catch (c) { if (void 0 === Ar || !(c instanceof Ar.ErrnoError)) throw c; return c.errno } }, fd_write: function A(B, Q, E, C) { try { var g = AN.getStreamFromFD(B), I = function A(B, Q, E, C) { for (var g = 0, I = 0; I < E; I++){ var w = n[Q >> 2], F = n[Q + 4 >> 2]; Q += 8; var D = Ar.write(B, U, w, F, void 0); if (D < 0) return -1; g += D } return g }(g, Q, E); return n[C >> 2] = I, 0 } catch (w) { if (void 0 === Ar || !(w instanceof Ar.ErrnoError)) throw w; return w.errno } }, setTempRet0: Af }; !function A() { var Q = { env: Aq, wasi_snapshot_preview1: Aq }; function E(A, Q) { var E, C = A.exports; C = AT.instrumentWasmExports(C), B.asm = C, O((c = B.asm.memory).buffer), l = B.asm.__indirect_function_table, E = B.asm.__wasm_call_ctors, j.unshift(E), AC("wasm-instantiate") } function g(A) { E(A.instance) } function I(A) { return (D || "function" != typeof fetch ? Promise.resolve().then(function () { return AD(R) }) : fetch(R, { credentials: "same-origin" }).then(function (A) { if (!A.ok) throw "failed to load wasm binary file at '" + R + "'"; return A.arrayBuffer() }).catch(function () { return AD(R) })).then(function (A) { return WebAssembly.instantiate(A, Q) }).then(function (A) { return A }).then(A, function (A) { h("failed to asynchronously prepare wasm: " + A), Ag(A) }) } if (AE("wasm-instantiate"), B.instantiateWasm) try { var w = B.instantiateWasm(Q, E); return w = AT.instrumentWasmExports(w) } catch (F) { return h("Module.instantiateWasm callback failed with error: " + F), !1 } return (D || "function" != typeof WebAssembly.instantiateStreaming || Aw(R) || "function" != typeof fetch ? I(g) : fetch(R, { credentials: "same-origin" }).then(function (A) { return WebAssembly.instantiateStreaming(A, Q).then(g, function (A) { return h("wasm streaming compile failed: " + A), h("falling back to ArrayBuffer instantiation"), I(g) }) })).catch(C), {} }(); var A9 = B.___wasm_call_ctors = function () { return (A9 = B.___wasm_call_ctors = B.asm.__wasm_call_ctors).apply(null, arguments) }, BA = B._do_usleep = function () { return (BA = B._do_usleep = B.asm.do_usleep).apply(null, arguments) }, BB = B._has_normals = function () { return (BB = B._has_normals = B.asm.has_normals).apply(null, arguments) }, BQ = B._has_texture = function () { return (BQ = B._has_texture = B.asm.has_texture).apply(null, arguments) }, BE = B._texture_width = function () { return (BE = B._texture_width = B.asm.texture_width).apply(null, arguments) }, BC = B._texture_height = function () { return (BC = B._texture_height = B.asm.texture_height).apply(null, arguments) }, Bg = B._create_file_info = function () { return (Bg = B._create_file_info = B.asm.create_file_info).apply(null, arguments) }, BI = B._free_file_info = function () { return (BI = B._free_file_info = B.asm.free_file_info).apply(null, arguments) }, Bw = B._frame_count = function () { return (Bw = B._frame_count = B.asm.frame_count).apply(null, arguments) }, BF = B._loaded_frame_number = function () { return (BF = B._loaded_frame_number = B.asm.loaded_frame_number).apply(null, arguments) }, BD = B._read_frame = function () { return (BD = B._read_frame = B.asm.read_frame).apply(null, arguments) }, Bc = B._max_blob_sz = function () { return (Bc = B._max_blob_sz = B.asm.max_blob_sz).apply(null, arguments) }, Bs = B._is_keyframe = function () { return (Bs = B._is_keyframe = B.asm.is_keyframe).apply(null, arguments) }, Bt = B._find_previous_keyframe = function () { return (Bt = B._find_previous_keyframe = B.asm.find_previous_keyframe).apply(null, arguments) }, BU = B._frame_vertices = function () { return (BU = B._frame_vertices = B.asm.frame_vertices).apply(null, arguments) }, Bo = B._frame_vertices_sz = function () { return (Bo = B._frame_vertices_sz = B.asm.frame_vertices_sz).apply(null, arguments) }, BM = B._frame_uvs_sz = function () { return (BM = B._frame_uvs_sz = B.asm.frame_uvs_sz).apply(null, arguments) }, BG = B._frame_normals_sz = function () { return (BG = B._frame_normals_sz = B.asm.frame_normals_sz).apply(null, arguments) }, B$ = B._frame_texture_data_ptr = function () { return (B$ = B._frame_texture_data_ptr = B.asm.frame_texture_data_ptr).apply(null, arguments) }, Bn = B._frame_texture_sz = function () { return (Bn = B._frame_texture_sz = B.asm.frame_texture_sz).apply(null, arguments) }, BY = B._frame_i = function () { return (BY = B._frame_i = B.asm.frame_i).apply(null, arguments) }, Be = B._frame_i_sz = function () { return (Be = B._frame_i_sz = B.asm.frame_i_sz).apply(null, arguments) }, Bl = B._frame_data_ptr = function () { return (Bl = B._frame_data_ptr = B.asm.frame_data_ptr).apply(null, arguments) }, BR = B._frame_vp_offset = function () { return (BR = B._frame_vp_offset = B.asm.frame_vp_offset).apply(null, arguments) }, Bi = B._frame_vp_copied = function () { return (Bi = B._frame_vp_copied = B.asm.frame_vp_copied).apply(null, arguments) }, Ba = B._frame_uvs_copied = function () { return (Ba = B._frame_uvs_copied = B.asm.frame_uvs_copied).apply(null, arguments) }, Br = B._frame_normals_copied = function () { return (Br = B._frame_normals_copied = B.asm.frame_normals_copied).apply(null, arguments) }, BN = B._frame_indices_copied = function () { return (BN = B._frame_indices_copied = B.asm.frame_indices_copied).apply(null, arguments) }, BJ = B._free = function () { return (BJ = B._free = B.asm.free).apply(null, arguments) }, BL = B._malloc = function () { return (BL = B._malloc = B.asm.malloc).apply(null, arguments) }, Bd = B.___errno_location = function () { return (Bd = B.___errno_location = B.asm.__errno_location).apply(null, arguments) }, Bf = B._emscripten_stack_set_limits = function () { return (Bf = B._emscripten_stack_set_limits = B.asm.emscripten_stack_set_limits).apply(null, arguments) }, Bk = B._emscripten_stack_get_base = function () { return (Bk = B._emscripten_stack_get_base = B.asm.emscripten_stack_get_base).apply(null, arguments) }, BZ = B._emscripten_stack_get_end = function () { return (BZ = B._emscripten_stack_get_end = B.asm.emscripten_stack_get_end).apply(null, arguments) }, Bh = B.stackSave = function () { return (Bh = B.stackSave = B.asm.stackSave).apply(null, arguments) }, Bb = B.stackRestore = function () { return (Bb = B.stackRestore = B.asm.stackRestore).apply(null, arguments) }, B0 = B.stackAlloc = function () { return (B0 = B.stackAlloc = B.asm.stackAlloc).apply(null, arguments) }, By = B.dynCall_vii = function () { return (By = B.dynCall_vii = B.asm.dynCall_vii).apply(null, arguments) }, BH = B.dynCall_jiji = function () { return (BH = B.dynCall_jiji = B.asm.dynCall_jiji).apply(null, arguments) }, BX = B.dynCall_iiii = function () { return (BX = B.dynCall_iiii = B.asm.dynCall_iiii).apply(null, arguments) }, Bm = B.dynCall_ii = function () { return (Bm = B.dynCall_ii = B.asm.dynCall_ii).apply(null, arguments) }, B7 = B.dynCall_iidiiii = function () { return (B7 = B.dynCall_iidiiii = B.asm.dynCall_iidiiii).apply(null, arguments) }, BW = B._asyncify_start_unwind = function () { return (BW = B._asyncify_start_unwind = B.asm.asyncify_start_unwind).apply(null, arguments) }, BS = B._asyncify_stop_unwind = function () { return (BS = B._asyncify_stop_unwind = B.asm.asyncify_stop_unwind).apply(null, arguments) }, BV = B._asyncify_start_rewind = function () { return (BV = B._asyncify_start_rewind = B.asm.asyncify_start_rewind).apply(null, arguments) }, Bv = B._asyncify_stop_rewind = function () { return (Bv = B._asyncify_stop_rewind = B.asm.asyncify_stop_rewind).apply(null, arguments) }; function Bu(A) { if (A = A || L, !(q > 0)) !function A() { if (B.preRun) for ("function" == typeof B.preRun && (B.preRun = [B.preRun]); B.preRun.length;)K(B.preRun.shift()); As(p) }(), !(q > 0) && (B.setStatus ? (B.setStatus("Running..."), setTimeout(function () { setTimeout(function () { B.setStatus("") }, 1), Q() }, 1)) : Q()); function Q() { !N && (N = !0, B.calledRun = !0, H || (x = !0, B.noFSInit || Ar.init.initialized || Ar.init(), Ar.ignorePermissions = !1, Ae.init(), As(j), E(B), B.onRuntimeInitialized && B.onRuntimeInitialized(), function A() { if (B.postRun) for ("function" == typeof B.postRun && (B.postRun = [B.postRun]); B.postRun.length;)P(B.postRun.shift()); As(z) }())) } } if (B.addRunDependency = AE, B.removeRunDependency = AC, B.FS_createPath = Ar.createPath, B.FS_createDataFile = Ar.createDataFile, B.FS_createPreloadedFile = Ar.createPreloadedFile, B.FS_createLazyFile = Ar.createLazyFile, B.FS_createDevice = Ar.createDevice, B.FS_unlink = Ar.unlink, B.ccall = A_, B.cwrap = function A(B, Q, E, C) { var g = (E = E || []).every(A => "number" === A || "boolean" === A); return "string" !== Q && g && !C ? A2(B) : function () { return A_(B, Q, E, arguments, C) } }, B.FS = Ar, AB = function A() { N || Bu(), N || (AB = A) }, B.preInit) for ("function" == typeof B.preInit && (B.preInit = [B.preInit]); B.preInit.length > 0;)B.preInit.pop()(); return Bu(), B.ready } })(); "object" == typeof exports && "object" == typeof module ? module.exports = Module : "function" == typeof define && define.amd ? define([], function () { return Module }) : "object" == typeof exports && (exports.Module = Module);

//////////////////////////////
// Vologram Three.js Player //
//////////////////////////////
let video;
const video_tag = "texture_video_el";
let vologram = new Object(); // Stores state about the current vologram.
vologram.fps; // Change this value if not using 30 frames-per-second video.// 30.02
let init_done = false; // If the basic shaders/objects are set up. A vologram can be downloaded & prepared after this is true.

function create_vologram_geometry() {
  vologram.geometry = new THREE.BufferGeometry();
}

function create_vologram_texture() {
  console.debug("Creating a texture with video: ", video);
  vologram.texture = new THREE.VideoTexture(video);
  console.debug(vologram.texture);
}

function create_vologram_mesh() {
  /*
    You can change the shader or material of the
    vologram here.

    For reference: 
    https://threejs.org/docs/#api/en/materials/ShaderMaterial
    
    You can call similar code to change the material of the
    mesh at runtime:
    `vologram.mesh.material = new THREE.MeshBasicMaterial(...)`
    */
  vologram.material = new THREE.MeshBasicMaterial({
    color: 0xffffff,
    map: vologram.texture,
  });
  vologram.mesh = new THREE.Mesh(vologram.geometry, vologram.material);
  vologram.mesh.position.set(0, 0, 0);
  // The vologram is mirrored
  vologram.mesh.scale.set(-1, 1, 1);
  // Look at the camera
  // vologram.mesh.rotation.set( 0, Math.PI, 0 )
}

function create_vologram() {
  // It is important to create the geometry and texture before the mesh
  create_vologram_geometry();
  create_vologram_texture();
  create_vologram_mesh();
  scene.add(vologram.mesh);
}

function init_video() {
  if (!video) {
    video = document.createElement("video");
    video.setAttribute("controls", "");
    video.setAttribute("id", video_tag);
    video.setAttribute("type", "video/mp4;");
    video.setAttribute("width", "0");
    video.setAttribute("height", "0");
    video.setAttribute("loop", "");
    video.setAttribute("playsinline", "");
    document.body.prepend(video);
  }

  video.addEventListener(
    "loadedmetadata",
    function (e) {
      console.log(e);
      console.log(e.target.videoWidth, e.target.videoHeight);
      // target.videoHeight
      console.log(vologram.texture.format);
      texture_width = e.target.videoWidth;
      texture_height = e.target.videoHeight;
    },
    false
  );
}

function init() {
  vologram.n_indices = 0;
  vologram.has_normals = false;
  vologram.last_frame_loaded = -1; // To avoid reloading the same frame.
  vologram.last_keyframe_loaded = -1; // Records if a preceding keyframe was already loaded.
  vologram.header_ready = false; // If file is downloaded.
  vologram.sequence_ready = false; // If file is downloaded.
  vologram.ready = false; // If data is downloaded and vologram is ready to play.

  init_done = true;

  return true;
}

Module["onRuntimeInitialized"] = function () {
  console.log("WASM for VOL_GEOM started...");

  // VERY IMPORTANT:
  // Calls cwrap on all the volograms wasm functions
  // and exposes them in the Module object
  Module.initVologramFunctions();

  init();
  if (!init) {
    return false;
  }

  console.log("render starting...");
};

// Copy vol_geom frame `frame_idx` into vologram webgl mesh.
// Returns true on success, and false on error loading frame.
// This function assumes that any preceding, required, keyframe has been resolved and loaded already.
function mesh_from_frame(frame_idx) {
  if (!vologram.geometry) {
    return;
  }
  if (vologram.last_frame_loaded == frame_idx) {
    return;
  } // Safety catch to avoid reloading the same frame twice.

  // Ask the vol_geom WASM to read the frame data from the vologram file into `_frame_data`.
  let ret = Module.read_frame(frame_idx);
  if (!ret) {
    return false;
  }

  let is_key = Module.is_keyframe(frame_idx);

  // Positions - fetch and upload.
  let vp_copied = Module.frame_vp_copied();
  let vp_sz = Module.frame_vertices_sz();
  let vp_f32 = new Float32Array(Module.HEAP8.buffer, vp_copied, vp_sz / 4);
  vologram.geometry.setAttribute(
    "position",
    new THREE.Float32BufferAttribute(vp_f32, 3)
  );

  if (vologram.has_normals) {
    // Not all volograms include normals.
    // Normals - fetch and upload.
    let normals_copied = Module.frame_normals_copied();
    let normals_sz = Module.frame_normals_sz();
    let vn_f32 = new Float32Array(
      Module.HEAP8.buffer,
      normals_copied,
      normals_sz / 4
    );
    vologram.geometry.setAttribute(
      "normal",
      new THREE.Float32BufferAttribute(vn_f32, 3)
    );
  }

  // Key-Frames also contain texture coordinate and index data.
  if (is_key) {
    vologram.last_keyframe_loaded = frame_idx;

    // Texture Coordinates - fetch and upload.
    let uvs_copied = Module.frame_uvs_copied();
    let uvs_sz = Module.frame_uvs_sz();
    let uvs_f32 = new Float32Array(Module.HEAP8.buffer, uvs_copied, uvs_sz / 4);
    vologram.geometry.setAttribute(
      "uv",
      new THREE.Float32BufferAttribute(uvs_f32, 2)
    );

    // Indices - fetch and upload.
    let indices_copied = Module.frame_indices_copied();
    let indices_sz = Module.frame_i_sz();
    vologram.n_indices = indices_sz / 2; // ushort
    let indices_u16 = new Uint16Array(
      Module.HEAP8.buffer,
      indices_copied,
      vologram.n_indices
    );
    vologram.geometry.setIndex(new THREE.Uint16BufferAttribute(indices_u16, 1));
  }

  // It seems that calculating bounding sphere does not work and always returns NaN value for the radius
  if (vologram.geometry.boundingSphere === null)
    vologram.geometry.boundingSphere = new THREE.Sphere();
  if (
    vologram.geometry.boundingSphere.radius <= 0 ||
    isNaN(vologram.geometry.boundingSphere.radius)
  ) {
    vologram.geometry.computeBoundingBox();
    vologram.geometry.boundingBox.getBoundingSphere(
      vologram.geometry.boundingSphere
    );
  }

  vologram.last_frame_loaded = frame_idx;
  return true;
}

function start_video() {
  video.src = vologram.video_url;
  video.requestVideoFrameCallback(doSomethingWithTheFrame);
  video.play();
}

function init_vologram() {
  if (!vologram.header_ready || !vologram.sequence_ready || vologram.ready) {
    return;
  } // Wait until both files are downloaded.
  let ret = Module.create_file_info("header.vols", "sequence_0.vols");
  console.log("create_file_info = " + ret);
  if (!ret) {
    console.error("failed to load vologram");
    return;
  }
  vologram.has_normals = Module.has_normals();
  vologram.max_blob_size = Module.max_blob_sz();
  console.log("max blob size =", vologram.max_blob_size);

  console.log("vologram.has_normals = " + vologram.has_normals);
  mesh_from_frame(0); // Load in frame 0 so something displays even if we don't play yet.
  console.log("mesh initialised");
  start_video();
  vologram.ready = true;
}

// This can be called to add an artificial slow-down in the code. Parameter value is in micro-seconds.
function test_usleep(us) {
  Module.ccall("do_usleep", "number", ["number"], [us]);
}

// Calls mesh_from_frame() but first loads a keyframe, if required.
function update_mesh_frame_allowing_skip(desired_frame_index) {
  // int find_previous_keyframe( int frame_idx );
  let keyframe_required = Module.find_previous_keyframe(desired_frame_index);

  // If running slowly we may skip over a keyframe. Grab that now to avoid stale keyframe desync.
  if (vologram.last_keyframe_loaded != keyframe_required) {
    mesh_from_frame(keyframe_required);
  }
  // Load actual current frame.
  mesh_from_frame(desired_frame_index);
}

const doSomethingWithTheFrame = (now, metadata) => {
  let frame_index = Math.floor(metadata.mediaTime * vologram.fps);
  update_mesh_frame_allowing_skip(frame_index);
  if (init_done) video.requestVideoFrameCallback(doSomethingWithTheFrame); // Re-register the callback to be notified about the next frame.
};

// Function to download files and start playback. Video playback needs to start with a click.
function start() {
  let FS = Module.FS;
  if (init_done) {
    {
      // Header file
      console.log("filename=" + vologram.header_url);
      let xmlhttp = new XMLHttpRequest();
      xmlhttp.open("GET", vologram.header_url, true);
      xmlhttp.responseType = "arraybuffer"; // Binary file type. Note: Can be a "blob" or "arraybuffer".
      xmlhttp.onload = (event) => {
        const array_buffer = xmlhttp.response; // Note: not xmlhttp.responseText
        if (array_buffer) {
          const byte_array = new Uint8Array(array_buffer);
          console.log(
            "file fetched = " +
              xmlhttp.responseURL +
              " bytes = " +
              byte_array.length
          );
          // NOTE! if filename has a path in it this function will fail if we don't mkdir first
          let stream = FS.open("header.vols", "w");
          FS.write(stream, byte_array, 0, byte_array.length, 0);
          FS.close(stream);
          console.log("file stored in vfs as = " + "header.vols");
          vologram.header_ready = true;
          init_vologram(); // Attempt init. Since files are downloaded asynchronously we don't know if sequence was downloaded first.
        }
      };
      xmlhttp.send(null);
    } // endblock header file.
    {
      // Sequence file
      console.log("filename=" + vologram.sequence_url);
      let seq = new XMLHttpRequest();
      seq.open("GET", vologram.sequence_url, true);
      seq.responseType = "arraybuffer"; // binary file type. NOTE! Can be a "blob" or "arraybuffer"
      seq.onload = (event) => {
        const array_buffer = seq.response; // Note: not xmlhttp.responseText
        if (array_buffer) {
          const byte_array = new Uint8Array(array_buffer);
          console.log(
            "file fetched = " +
              seq.responseURL +
              " bytes = " +
              byte_array.length
          );
          let stream = FS.open("sequence_0.vols", "w");
          FS.write(stream, byte_array, 0, byte_array.length, 0);
          FS.close(stream);
          console.log("file stored in vfs as = " + "sequence_0.vols");
          vologram.sequence_ready = true;
          init_vologram(); // Attempt init. Since files are downloaded asynchronously we don't know if header was downloaded first.
        }
      };
      seq.send(null);
    } // endblock sequence file.
  } // endif init_done
} // endfunction load_clicked()

function create(
  scene_3js,
  renderer_3js,
  header_url,
  sequence_url,
  video_url,
  initModule,
  video_element = null
) {
  scene = scene_3js;
  renderer = renderer_3js;
  vologram.header_url = header_url;
  vologram.sequence_url = sequence_url;
  vologram.video_url = video_url;
  video = video_element;
  init_video();
  create_vologram();
  initModule(Module);
}

function close() {
  if (video) {
    video.pause();
    video.remove();
  }
  if (vologram) {
    vologram.mesh = null;
    vologram.material = null;
    vologram.geometry = null;
    vologram.texture = null;
  }
  Module.free_file_info();
  init_done = false;
}

///////////////////////
// A-Frame Component //
///////////////////////
AFRAME.registerComponent("vologram-component", {
  schema: {
    headerUrl: { type: "string", default: "vologram/header.vols" },
    sequenceUrl: { type: "string", default: "vologram/sequence_0.vols" },
    videoUrl: { type: "string", default: "vologram/texture_2048_h264.mp4" },
    vologramFps: {type: "float", default: 30.0}
  },

  init: async function () {
    let header_url = this.data.headerUrl;
    let sequence_url = this.data.sequenceUrl;
    let video_url = this.data.videoUrl;
    vologram.fps = this.data.vologramFps;  

    let video_element = document.getElementById("texture_video_el");
    let load_button = document.getElementById("load-vologram");
    let play_button = document.getElementById("play-vologram");
    let pause_button = document.getElementById("pause-vologram");

    const renderer = document.querySelector("a-scene").renderer;
    const scene = document.querySelector("a-scene").object3D;
    const initModule = Module;

    create(
      scene,
      renderer,
      header_url,
      sequence_url,
      video_url,
      initModule,
      video_element
    );

    this.el.setObject3D("mesh", vologram.mesh);

    load_button.onclick = () => {
      start();
      load_button.style.display = "none";
    };

    play_button.onclick = () => {
      document.querySelector("video").play();
    };

    pause_button.onclick = () => {
      document.querySelector("video").pause();
    };
  },
});
